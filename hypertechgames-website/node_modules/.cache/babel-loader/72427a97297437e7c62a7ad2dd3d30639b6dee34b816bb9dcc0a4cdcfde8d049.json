{"ast":null,"code":"export const handleActiveNavigation = () => {\n  const sections = document.querySelectorAll('section[id]');\n  const navLinks = document.querySelectorAll('a[href^=\"#\"]');\n  const contactSection = document.getElementById('contact');\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const id = entry.target.getAttribute('id');\n\n        // Remove active class from all links\n        navLinks.forEach(link => {\n          link.classList.remove('active');\n          // Also remove CSS module class if it exists\n          const classList = Array.from(link.classList);\n          const activeClass = classList.find(cls => cls.includes('active'));\n          if (activeClass) link.classList.remove(activeClass);\n        });\n\n        // Add active class to current section link\n        const activeLink = document.querySelector(`a[href=\"#${id}\"]`);\n        if (activeLink) {\n          activeLink.classList.add('active');\n        }\n\n        // Trigger contact section animation\n        if (id === 'contact' && contactSection) {\n          contactSection.classList.add('animate');\n        }\n      }\n    });\n  }, {\n    threshold: 0.6,\n    rootMargin: '-20% 0px -20% 0px'\n  });\n  sections.forEach(section => observer.observe(section));\n};","map":{"version":3,"names":["handleActiveNavigation","sections","document","querySelectorAll","navLinks","contactSection","getElementById","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","id","target","getAttribute","link","classList","remove","Array","from","activeClass","find","cls","includes","activeLink","querySelector","add","threshold","rootMargin","section","observe"],"sources":["C:/Users/ASUS/Block_Drop_Game/hypertechgames-website/src/utils/navigation.js"],"sourcesContent":["export const handleActiveNavigation = () => {\n  const sections = document.querySelectorAll('section[id]');\n  const navLinks = document.querySelectorAll('a[href^=\"#\"]');\n  const contactSection = document.getElementById('contact');\n  \n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const id = entry.target.getAttribute('id');\n        \n        // Remove active class from all links\n        navLinks.forEach(link => {\n          link.classList.remove('active');\n          // Also remove CSS module class if it exists\n          const classList = Array.from(link.classList);\n          const activeClass = classList.find(cls => cls.includes('active'));\n          if (activeClass) link.classList.remove(activeClass);\n        });\n        \n        // Add active class to current section link\n        const activeLink = document.querySelector(`a[href=\"#${id}\"]`);\n        if (activeLink) {\n          activeLink.classList.add('active');\n        }\n        \n        // Trigger contact section animation\n        if (id === 'contact' && contactSection) {\n          contactSection.classList.add('animate');\n        }\n      }\n    });\n  }, {\n    threshold: 0.6,\n    rootMargin: '-20% 0px -20% 0px'\n  });\n\n  sections.forEach(section => observer.observe(section));\n};"],"mappings":"AAAA,OAAO,MAAMA,sBAAsB,GAAGA,CAAA,KAAM;EAC1C,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC;EACzD,MAAMC,QAAQ,GAAGF,QAAQ,CAACC,gBAAgB,CAAC,cAAc,CAAC;EAC1D,MAAME,cAAc,GAAGH,QAAQ,CAACI,cAAc,CAAC,SAAS,CAAC;EAEzD,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;IACrDA,OAAO,CAACC,OAAO,CAACC,KAAK,IAAI;MACvB,IAAIA,KAAK,CAACC,cAAc,EAAE;QACxB,MAAMC,EAAE,GAAGF,KAAK,CAACG,MAAM,CAACC,YAAY,CAAC,IAAI,CAAC;;QAE1C;QACAX,QAAQ,CAACM,OAAO,CAACM,IAAI,IAAI;UACvBA,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;UAC/B;UACA,MAAMD,SAAS,GAAGE,KAAK,CAACC,IAAI,CAACJ,IAAI,CAACC,SAAS,CAAC;UAC5C,MAAMI,WAAW,GAAGJ,SAAS,CAACK,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,QAAQ,CAAC,QAAQ,CAAC,CAAC;UACjE,IAAIH,WAAW,EAAEL,IAAI,CAACC,SAAS,CAACC,MAAM,CAACG,WAAW,CAAC;QACrD,CAAC,CAAC;;QAEF;QACA,MAAMI,UAAU,GAAGvB,QAAQ,CAACwB,aAAa,CAAC,YAAYb,EAAE,IAAI,CAAC;QAC7D,IAAIY,UAAU,EAAE;UACdA,UAAU,CAACR,SAAS,CAACU,GAAG,CAAC,QAAQ,CAAC;QACpC;;QAEA;QACA,IAAId,EAAE,KAAK,SAAS,IAAIR,cAAc,EAAE;UACtCA,cAAc,CAACY,SAAS,CAACU,GAAG,CAAC,SAAS,CAAC;QACzC;MACF;IACF,CAAC,CAAC;EACJ,CAAC,EAAE;IACDC,SAAS,EAAE,GAAG;IACdC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF5B,QAAQ,CAACS,OAAO,CAACoB,OAAO,IAAIvB,QAAQ,CAACwB,OAAO,CAACD,OAAO,CAAC,CAAC;AACxD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}